{
    "name": "dependency",

    "imports": [
	{ "uri": "http://www.apidoc.me/flow/common/0.0.1-dev/service.json" },
	{ "uri": "http://www.apidoc.me/flow/user/0.0.1-dev/service.json" }
    ],

    "unions": {
	"item_summary": {
	    "types": [
		{ "type": "binary_summary" },
		{ "type": "library_summary" },
		{ "type": "project_summary" }
	    ]
	},

	"credentials": {
	    "types": [
		{ "type": "username_password" }
	    ]
	}
    },

    "enums": {
	"scms": {
	    "values": [
		{ "name": "github" }
	    ]
	},

	"binary_type": {
	    "values": [
		{ "name": "scala", "description": "See http://www.scala-lang.org/" },
		{ "name": "sbt", "description": "See http://www.scala-sbt.org/" }
	    ]
	},

	"publication": {
	    "description": "A publication represents something that a user can subscribe to.",
	    "values": [
		{ "name": "daily_summary", "description": "A daily summary of dependencies that can be upgraded" }
	    ]
	},

	"recommendation_type": {
	    "values": [
		{ "name": "library" },
		{ "name": "binary" }
	    ]
	},

	"sync_event": {
	    "values": [
		{ "name": "started" },
		{ "name": "completed" }
	    ]
	},

	"visibility": {
	    "values": [
		{ "name": "public" },
		{ "name": "private" }
	    ]
	}

    },

    "models": {

	"username_password": {
	    "fields": [
		{ "name": "username", "type": "string" },
		{ "name": "password", "type": "string", "required": false }
	    ]
	},

	"resolver": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "visibility", "type": "visibility" },
                { "name": "organization", "type": "organization_summary", "required": false, "description": "The organization that created the resolver. If empty, indicates a globally public resolver" },
		{ "name": "uri", "type": "string", "example": "https://flow.artifactoryonline.com/flow/libs-release" },
		{ "name": "credentials", "type": "credentials", "required": false },
		{ "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"resolver_summary": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "visibility", "type": "visibility" },
		{ "name": "uri", "type": "string" }
	    ]
	},

	"resolver_form": {
	    "fields": [
		{ "name": "visibility", "type": "visibility" },
		{ "name": "organization_guid", "type": "uuid" },
		{ "name": "uri", "type": "string" },
		{ "name": "credentials", "type": "credentials", "required": false }
	    ]
	},


	"binary": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "organization", "type": "organization_summary" },
		{ "name": "name", "type": "binary_type" },
		{ "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"binary_form": {
	    "fields": [
		{ "name": "organization_guid", "type": "uuid" },
		{ "name": "name", "type": "string" },
		{ "name": "version", "type": "string", "description": "If provided, we automatically record this version of theacc binary." }
	    ]
	},

	"binary_summary": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "organization", "type": "organization_summary" },
		{ "name": "name", "type": "binary_type" }
	    ]
	},

	"binary_version": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "binary", "type": "binary" },
		{ "name": "version", "type": "string" },
		{ "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"project_binary_version": {
	    "description": "A projection of projects and the specific binary versions the project is dependent on",
	    "fields": [
		{ "name": "project", "type": "project" },
		{ "name": "binary_version", "type": "binary_version" }
	    ]
	},	    
	
	"library": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "organization", "type": "organization_summary" },
		{ "name": "group_id", "type": "string" },
		{ "name": "artifact_id", "type": "string" },
		{ "name": "resolver", "type": "resolver_summary", "required": false, "description": "Once we locate this library, we record the resolver and use it to find future versions" },
		{ "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"library_form": {
	    "fields": [
		{ "name": "organization_guid", "type": "uuid" },
		{ "name": "group_id", "type": "string" },
		{ "name": "artifact_id", "type": "string" },
		{ "name": "resolver_guid", "type": "uuid", "required": false },
		{ "name": "version", "type": "version_form", "required": false, "description": "If provided, we automatically record this version of this library." }
	    ]
	},

	"library_summary": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "organization", "type": "organization_summary" },
		{ "name": "group_id", "type": "string" },
		{ "name": "artifact_id", "type": "string" }
	    ]
	},

	"version_form": {
	    "fields": [
		{ "name": "version", "type": "string", "example": "1.0.0" },
		{ "name": "cross_build_version", "type": "string", "example": "2.11", "required": false }
	    ]
	},

	"library_version": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "library", "type": "library" },
		{ "name": "version", "type": "string" },
		{ "name": "cross_build_version", "type": "string", "required": false },
		{ "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},
	
	"organization": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "key", "type": "string" },
                { "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"organization_form": {
	    "fields": [
		{ "name": "key", "type": "string" }
	    ]
	},

	"organization_summary": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "key", "type": "string" }
	    ]
	},

	"project": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "organization", "type": "organization_summary" },
		{ "name": "visibility", "type": "visibility" },
		{ "name": "scms", "type": "scms" },
		{ "name": "name", "type": "string" },
		{ "name": "uri", "type": "string" },
                { "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"project_detail": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "organization", "type": "organization_summary" },
		{ "name": "name", "type": "string" }
	    ]
	},

	"project_summary": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "organization", "type": "organization_summary" },
		{ "name": "name", "type": "string" }
	    ]
	},

	"project_library_version": {
	    "description": "A projection of projects and the specific library versions the project is dependent on",
	    "fields": [
		{ "name": "project", "type": "project" },
		{ "name": "library_version", "type": "library_version" }
	    ]
	},	    
	
	"project_form": {
	    "fields": [
		{ "name": "organization_guid", "type": "uuid" },
		{ "name": "name", "type": "string" },
		{ "name": "visibility", "type": "visibility" },
		{ "name": "scms", "type": "scms" },
		{ "name": "uri", "type": "string" }
	    ]
	},
	
	"repository": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "visibility", "type": "visibility" },
		{ "name": "uri", "type": "string" }
	    ]
	},
	
	"project_patch_form": {
	    "fields": [
		{ "name": "name", "type": "string", "required": false },
		{ "name": "visibility", "type": "visibility", "required": false },
		{ "name": "scms", "type": "scms", "required": false },
		{ "name": "uri", "type": "string", "required": false }
	    ]
	},

	"recommendation": {
	    "description": "Summary of a specific recommendations for a project. Designed for display in the project dashboard",
	    "fields": [
		{ "name": "guid", "type": "uuid" },
		{ "name": "project", "type": "project_detail" },
		{ "name": "type", "type": "recommendation_type" },
		{ "name": "object", "type": "io.flow.common.v0.models.reference" },
		{ "name": "name", "type": "string", "description": "The name of the library or binary to upgrade" },
		{ "name": "from", "type": "string", "description": "The current version" },
		{ "name": "to", "type": "string", "description": "The version to which we recommend upgrading" },
                { "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"library_recommendation": {
	    "fields": [
		{ "name": "from", "type": "library_version" },
		{ "name": "to", "type": "library_version" },
		{ "name": "latest", "type": "library_version" }
	    ]
	},
	
	"binary_recommendation": {
	    "fields": [
		{ "name": "from", "type": "binary_version" },
		{ "name": "to", "type": "binary_version" },
		{ "name": "latest", "type": "binary_version" }
	    ]
	},

	"github_user_form": {
	    "fields": [
		{ "name": "user_guid", "type": "uuid" },
		{ "name": "id", "type": "long" },
		{ "name": "login", "type": "string" }
	    ]
	},
	
	"github_user": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
                { "name": "user", "type": "io.flow.common.v0.models.reference" },
		{ "name": "id", "type": "long" },
		{ "name": "login", "type": "string" },
                { "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"github_authentication_form": {
	    "description": "Used to authenticate user based on the oauth code we receive from github",
	    "fields": [
                { "name": "code", "type": "string" }
            ]
	},

	"token": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
                { "name": "user", "type": "io.flow.common.v0.models.reference" },
		{ "name": "tag", "type": "string" },
		{ "name": "token", "type": "string" },
		{ "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"token_form": {
	    "fields": [
		{ "name": "user_guid", "type": "uuid" },
		{ "name": "tag", "type": "string" },
		{ "name": "token", "type": "string" }
	    ]
	},
	
	"subscription": {
	    "description": "Represents a user that is currently subscribed to a publication",
	    "fields": [
		{ "name": "guid", "type": "uuid", "description": "Internal unique identifier for this subscription record" },
		{ "name": "user", "type": "io.flow.common.v0.models.reference" },
		{ "name": "publication", "type": "publication" },
                { "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"subscription_form": {
	    "fields": [
		{ "name": "user_guid", "type": "uuid" },
		{ "name": "publication", "type": "publication" }
	    ]
	},

	"watch_project": {
	    "fields": [
		{ "name": "guid", "type": "uuid" },
                { "name": "user", "type": "io.flow.common.v0.models.reference" },
                { "name": "project", "type": "project" },
		{ "name": "audit", "type": "io.flow.common.v0.models.audit" }
	    ]
	},

	"watch_project_form": {
	    "fields": [
		{ "name": "user_guid", "type": "uuid" },
		{ "name": "project_guid", "type": "uuid" }
	    ]
	},
	
        "item": {
            "description": "A denormalization of item content for search",
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Unique identifer for this item." },
                { "name": "organization", "type": "organization_summary" },
                { "name": "summary", "type": "item_summary" },
                { "name": "label", "type": "string" },
                { "name": "description", "type": "string", "required": false }
            ]
        },

        "sync": {
            "description": "Records when we start and complete each sync of a module (e.g. project)",
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Unique identifer for this item." },
                { "name": "event", "type": "sync_event" },
		{ "name": "audit", "type": "io.flow.common.v0.models.audit" }
            ]
        }

    },

    "resources": {

	"io.flow.common.v0.models.healthcheck": {
	    "path": "/_internal_",
            "operations": [
                {
                    "method": "GET",
		    "path": "/healthcheck",
                    "responses": {
                        "200": { "type": "io.flow.common.v0.models.healthcheck" }
                    }
                }
	    ]
	},

	"github_user": {
	    "path": "/authentications",
	    "operations": [
		{
		    "method": "POST",
		    "path": "/github",
		    "description": "Used to authenticate a user via github",
		    "body": { "type": "github_authentication_form" },
                    "responses": {
                        "200": { "type": "io.flow.user.v0.models.user" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
		    }
		}
	    ]
	},
	
	"io.flow.user.v0.models.user": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Search for a specific user. You must specify at least 1 parameter - either a guid or email - and will receive back either 0 or 1 users.",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find user with this guid. Exact match", "required": false },
                        { "name": "email", "type": "string", "description": "Find user with this email address. Case in-sensitive. Exact match", "required": false }
                    ],
                    "responses": {
                        "200": { "type": "[io.flow.user.v0.models.user]" },
                        "401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the user with this guid.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "io.flow.user.v0.models.user" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new user.",
                    "body": { "type": "io.flow.user.v0.models.user_form" },
                    "responses": {
                        "201": { "type": "io.flow.user.v0.models.user" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                }
            ]
        },

	"project": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Search projects. Results are paginated",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find project with this guid. Exact match", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
                        { "name": "name", "type": "string", "description": "Find project with this name. Case in-sensitive. Exact match", "required": false },
                        { "name": "group_id", "type": "string", "description": "Find projects that are dependent on a library with this group ID. Exact match", "required": false },
                        { "name": "artifact_id", "type": "string", "description": "Find projects that are dependent on a library with this artifact ID. Exact match", "required": false },
                        { "name": "version", "type": "string", "description": "Find projects that are dependent on a library with this version number. Exact match", "required": false },
                        { "name": "library_guid", "type": "uuid", "description": "Find projects that are dependent on a library", "required": false },
                        { "name": "library_version_guid", "type": "uuid", "description": "Find projects that are dependent on a specific library version", "required": false },
                        { "name": "binary", "type": "string", "description": "Find projects that are dependent on this binary. Case in-sensitive. Exact match", "required": false },
                        { "name": "binary_guid", "type": "uuid", "description": "Find projects that are dependent on a binary", "required": false },
                        { "name": "binary_version_guid", "type": "uuid", "description": "Find projects that are dependent on a binary", "required": false },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[project]" },
                        "401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the project with this guid.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "project" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new project.",
                    "body": { "type": "project_form" },
                    "responses": {
                        "201": { "type": "project" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

                {
                    "method": "PUT",
		    "path": "/:guid",
                    "description": "Update an existing project.",
                    "body": { "type": "project_form" },
                    "responses": {
                        "200": { "type": "project", "description": "Project successfully updated" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

                {
                    "method": "PATCH",
		    "path": "/:guid",
                    "description": "Patch an existing project",
                    "body": { "type": "project_patch_form" },
                    "responses": {
                        "200": { "type": "project", "description": "Project successfully updated" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

		{
		    "method": "DELETE",
		    "path": "/:guid",
                    "responses": {
                        "204": { "type": "unit" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                }
            ]
        },

	"organization": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Search organizations. Results are paginated",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find organization with this guid. Exact match", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
                        { "name": "key", "type": "string", "description": "Find organization with this key. Case in-sensitive. Exact match", "required": false },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[organization]" },
                        "401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns the organization representing the individual user.",
                    "path": "/users/:user_guid",
                    "parameters": [
                        { "name": "user_guid", "type": "uuid", "description": "Find organization representing this user" }
		    ],
                    "responses": {
                        "200": { "type": "organization" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit", "description": "Returns if the user guid does not exist" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the organization with this guid.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "organization" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new organization.",
                    "body": { "type": "organization_form" },
                    "responses": {
                        "201": { "type": "organization" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

                {
                    "method": "PUT",
		    "path": "/:guid",
                    "description": "Update an existing organization.",
                    "body": { "type": "organization_form" },
                    "responses": {
                        "200": { "type": "organization", "description": "Organization successfully updated" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

		{
		    "method": "DELETE",
		    "path": "/:guid",
                    "responses": {
                        "204": { "type": "unit" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                }
            ]
        },

	"resolver": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Search resolvers. Results are paginated",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find resolver with this guid. Exact match", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[resolver]" },
                        "401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the resolver with this guid.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "resolver" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new resolver.",
                    "body": { "type": "resolver_form" },
                    "responses": {
                        "201": { "type": "resolver" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

		{
		    "method": "DELETE",
		    "path": "/:guid",
                    "responses": {
                        "204": { "type": "unit" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                }
            ]
        },

	"library": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Search libraries. Results are paginated",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find library with this guid. Exact match", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
                        { "name": "project_guid", "type": "uuid", "description": "Find binaries associated with this project", "required": false },
                        { "name": "group_id", "type": "string", "description": "Find library with this group_id. Case sensitive. Exact match", "required": false },
                        { "name": "artifact_id", "type": "string", "description": "Find library with this artifact_id. Case sensitive. Exact match", "required": false },
                        { "name": "resolver_guid", "type": "uuid", "description": "Find libraries resolved with this resolver", "required": false },
                        { "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[library]" },
                        "401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the library with this guid.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "library" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new library.",
                    "body": { "type": "library_form" },
                    "responses": {
                        "201": { "type": "library" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

		{
		    "method": "DELETE",
		    "path": "/:guid",
                    "responses": {
                        "204": { "type": "unit" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                }
            ]
        },

	"library_version": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Search library versions. Results are paginated",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find library version with this guid. Exact match", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
                        { "name": "library_guid", "type": "uuid", "description": "Find binaries associated with this binary", "required": false },
                        { "name": "project_guid", "type": "uuid", "description": "Find binaries associated with this project", "required": false },
                        { "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[library_version]" },
                        "401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the library version with this guid.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "library_version" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                }

            ]
        },

	"binary": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Search binaries. Results are paginated",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find binary with this guid. Exact match", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
                        { "name": "project_guid", "type": "uuid", "description": "Find binaries associated with this project", "required": false },
                        { "name": "name", "type": "string", "description": "Find project with this name. Case in-sensitive. Exact match", "required": false },
                        { "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[binary]" },
                        "401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the binary with this guid.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "binary" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new binary.",
                    "body": { "type": "binary_form" },
                    "responses": {
                        "201": { "type": "binary" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

		{
		    "method": "DELETE",
		    "path": "/:guid",
                    "responses": {
                        "204": { "type": "unit" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                }
            ]
        },

	"project_library_version": {
	    "operations": [
		{
                    "method": "GET",
                    "description": "Get detailed information on every project using this library, including the precise version",
                    "parameters": [
			{ "name": "project_guid", "type": "uuid", "description": "Filter for this project", "required": false },
			{ "name": "library_guid", "type": "uuid", "description": "Filter for this library", "required": false },
			{ "name": "library_version_guid", "type": "uuid", "description": "Filter for this library version", "required": false },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
			{ "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
			"200": { "type": "[project_library_version]" },
			"401": { "type": "unit" }
                    }
		}
	    ]
	},

	"binary_version": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Search binary versions. Results are paginated",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find binary version with this guid. Exact match", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
                        { "name": "binary_guid", "type": "uuid", "description": "Find binaries associated with this binary", "required": false },
                        { "name": "project_guid", "type": "uuid", "description": "Find binaries associated with this project", "required": false },
                        { "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[binary_version]" },
                        "401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the binary version with this guid.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "binary_version" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                }

            ]
        },

	"project_binary_version": {
	    "operations": [
		{
                    "method": "GET",
                    "description": "Get detailed information on every project using this binary, including the precise version",
                    "parameters": [
			{ "name": "project_guid", "type": "uuid", "description": "Filter for this project", "required": false },
			{ "name": "binary_guid", "type": "uuid", "description": "Filter for this binary", "required": false },
			{ "name": "binary_version_guid", "type": "uuid", "description": "Filter for this binary version", "required": false },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
			{ "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
			"200": { "type": "[project_binary_version]" },
			"401": { "type": "unit" }
                    }
		}
	    ]
	},

	"library_recommendation": {
	    "path": "/recommendations/libraries",

	    "operations": [
		{
                    "method": "GET",
		    "path": "/projects/:project_guid",
                    "description": "Get recommendations for which libraries to upgrade",
                    "parameters": [
			{ "name": "project_guid", "type": "uuid" }
                    ],
                    "responses": {
			"200": { "type": "[library_recommendation]" },
			"401": { "type": "unit" }
                    }
		}
	    ]
	},
	
	"binary_recommendation": {
	    "path": "/recommendations/binaries",

	    "operations": [
		{
                    "method": "GET",
		    "path": "/projects/:project_guid",
                    "description": "Get recommendations for which binaries to upgrade",
                    "parameters": [
			{ "name": "project_guid", "type": "uuid" }
                    ],
                    "responses": {
			"200": { "type": "[binary_recommendation]" },
			"401": { "type": "unit" }
                    }
		}
	    ]
	},

	"repository": {
	    "operations": [
		{
                    "method": "GET",
		    "path": "/github",
                    "description": "Returns a list of repositories from github",
                    "parameters": [
			{ "name": "name", "type": "string", "required": false, "description": "Optionally filter by repo name. Case in-sensitive. Exact match" },
			{ "name": "organization_guid", "type": "uuid", "required": false, "description": "If specified, we enable additional filtering by this organization (see existing_project parameter)." },
			{ "name": "existing_project", "type": "boolean", "required": false, "description": "Optionally filter by repositories that are either already mapped to existing projects or not. Requires organization_guid parameter to also be specified." },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
			{ "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
			"200": { "type": "[repository]" },
			"401": { "type": "unit" }
                    }
		}
	    ]
	},

	"subscription": {
	    "operations": [
                {
                    "method": "GET",
                    "description": "Search subscriptions. Always paginated.",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find the subscription with this guid.", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
                        { "name": "user_guid", "type": "uuid", "description": "Find subscriptions for this user.", "required": false },
                        { "name": "publication", "type": "publication", "description": "Find subscriptions for this publication.", "required": false },
                        { "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[subscription]" },
			"401": { "type": "unit" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about a specific subscription.",
                    "path": "/:guid",
                    "responses": {
                        "200": { "type": "subscription" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new subscription.",
                    "body": { "type": "subscription_form" },
                    "responses": {
                        "201": { "type": "subscription" },
                        "401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
                },

                {
                    "method": "DELETE",
		    "path": "/:guid",
		    "responses": {
                        "204": { "type": "unit" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }

                }
            ]
        },

	"watch_project": {
	    "path": "/watches/projects",

	    "operations": [
		{
                    "method": "GET",
                    "parameters": [
                        { "name": "guid", "type": "uuid", "description": "Find binary version with this guid. Exact match", "required": false },
			{ "name": "guids", "type": "[uuid]", "description": "Filter by any one of these guids", "required": false },
			{ "name": "user_guid", "type": "uuid", "required": false },
			{ "name": "project_guid", "type": "uuid", "required": false },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
			{ "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
			"200": { "type": "[watch_project]" },
			"401": { "type": "unit" }
                    }
		},

		{
		    "method": "GET",
		    "path": "/:guid",
                    "responses": {
                        "200": { "type": "watch_project" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                },
		
		{
		    "method": "POST",
		    "body": { "type": "watch_project_form" },
                    "responses": {
			"200": { "type": "watch_project", "description": "User was already watching this project. Existing record returned" },
			"201": { "type": "watch_project", "description": "Watch record created and returned" },
			"401": { "type": "unit" },
                        "409": { "type": "[io.flow.common.v0.models.error]" }
                    }
		},

		{
		    "method": "DELETE",
		    "path": "/:guid",
                    "responses": {
                        "204": { "type": "unit" },
                        "401": { "type": "unit" },
                        "404": { "type": "unit" }
                    }
                }
		
	    ]
	},

	"recommendation": {
	    "operations": [
		{
                    "method": "GET",
                    "description": "Returns a list of recommendations for this user across all of the projects the user is watching",
                    "parameters": [
			{ "name": "project_guid", "type": "uuid", "required": false, "description": "Optionally filter by project" },
			{ "name": "type", "type": "recommendation_type", "required": false, "description": "Optionally filter by type of recommendation." },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
			{ "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
			"200": { "type": "[recommendation]" },
			"401": { "type": "unit" }
                    }
		}
	    ]
	},

	"item": {
	    "path": "/search",
	    "operations": [
		{
                    "method": "GET",
                    "description": "Returns a list of all matching items",
                    "parameters": [
			{ "name": "q", "type": "string", "required": false, "description": "Actual search query" },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
			{ "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
			"200": { "type": "[item]" },
			"401": { "type": "unit" }
                    }
		}
	    ]
	},

	"sync": {
	    "operations": [
		{
                    "method": "GET",
                    "parameters": [
			{ "name": "object_guid", "type": "uuid", "required": false },
			{ "name": "event", "type": "sync_event", "required": false },
			{ "name": "limit", "type": "long", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
			{ "name": "offset", "type": "long", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
			"200": { "type": "[sync]" },
			"401": { "type": "unit" }
                    }
		}
	    ]
	}

    }

}
