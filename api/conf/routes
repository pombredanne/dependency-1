# Generated by apidoc - http://www.apidoc.me
# Service version: 0.0.1-dev
# apidoc:0.9.47 http://localhost:9000/bryzek/dependency/0.0.1-dev/play_2_x_routes

GET        /_internal_/healthcheck       controllers.Healthchecks.getInternalAndHealthcheck()
GET        /                             controllers.Users.get(guid: _root_.scala.Option[_root_.java.util.UUID], email: _root_.scala.Option[String])
POST       /authenticate                 controllers.Users.postAuthenticate()
POST       /                             controllers.Users.post()
GET        /languages                    controllers.Languages.get(guid: _root_.scala.Option[_root_.java.util.UUID], guids: _root_.scala.Option[List[_root_.java.util.UUID]], project_guid: _root_.scala.Option[_root_.java.util.UUID], name: _root_.scala.Option[String], limit: Long ?= 25, offset: Long ?= 0)
GET        /languages/:guid              controllers.Languages.getByGuid(guid: _root_.java.util.UUID)
POST       /languages                    controllers.Languages.post()
DELETE     /languages/:guid              controllers.Languages.deleteByGuid(guid: _root_.java.util.UUID)
GET        /libraries                    controllers.Libraries.get(guid: _root_.scala.Option[_root_.java.util.UUID], guids: _root_.scala.Option[List[_root_.java.util.UUID]], project_guid: _root_.scala.Option[_root_.java.util.UUID], group_id: _root_.scala.Option[String], artifact_id: _root_.scala.Option[String], limit: Long ?= 25, offset: Long ?= 0)
GET        /libraries/:guid              controllers.Libraries.getByGuid(guid: _root_.java.util.UUID)
POST       /libraries                    controllers.Libraries.post()
DELETE     /libraries/:guid              controllers.Libraries.deleteByGuid(guid: _root_.java.util.UUID)
GET        /library_versions             controllers.LibraryVersions.get(guid: _root_.scala.Option[_root_.java.util.UUID], guids: _root_.scala.Option[List[_root_.java.util.UUID]], library_guid: _root_.scala.Option[_root_.java.util.UUID], project_guid: _root_.scala.Option[_root_.java.util.UUID], limit: Long ?= 25, offset: Long ?= 0)
GET        /library_versions/:guid       controllers.LibraryVersions.getByGuid(guid: _root_.java.util.UUID)
GET        /projects                     controllers.Projects.get(guid: _root_.scala.Option[_root_.java.util.UUID], guids: _root_.scala.Option[List[_root_.java.util.UUID]], name: _root_.scala.Option[String], group_id: _root_.scala.Option[String], artifact_id: _root_.scala.Option[String], version: _root_.scala.Option[String], library_guid: _root_.scala.Option[_root_.java.util.UUID], library_version_guid: _root_.scala.Option[_root_.java.util.UUID], language: _root_.scala.Option[String], language_guid: _root_.scala.Option[_root_.java.util.UUID], language_version_guid: _root_.scala.Option[_root_.java.util.UUID], limit: Long ?= 25, offset: Long ?= 0)
GET        /projects/:guid               controllers.Projects.getByGuid(guid: _root_.java.util.UUID)
POST       /projects                     controllers.Projects.post()
PUT        /projects/:guid               controllers.Projects.putByGuid(guid: _root_.java.util.UUID)
PATCH      /projects/:guid               controllers.Projects.patchByGuid(guid: _root_.java.util.UUID)
DELETE     /projects/:guid               controllers.Projects.deleteByGuid(guid: _root_.java.util.UUID)
GET        /project_library_versions     controllers.ProjectLibraryVersions.get(project_guid: _root_.scala.Option[_root_.java.util.UUID], library_guid: _root_.scala.Option[_root_.java.util.UUID], library_version_guid: _root_.scala.Option[_root_.java.util.UUID], limit: Long ?= 25, offset: Long ?= 0)
GET        /:guid                        controllers.Users.getByGuid(guid: _root_.java.util.UUID)